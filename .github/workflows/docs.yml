name: Generate API Documentation

on:
  push:
    branches: [ openapi-docs ]
  workflow_dispatch:

# Add concurrency to cancel previous runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  generate-docs:
    # Skip if the commit was made by the GitHub Action
    if: github.event_name == 'workflow_dispatch' || github.event.head_commit.author.name != 'GitHub Action'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    services:
      pgmq:
        image: tembo.docker.scarf.sh/tembo/pg17-pgmq:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
        with:
          ref: openapi-docs
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build pgmq-rest Docker image
        run: docker build -t pgmq-rest .

      - name: Run pgmq-rest container
        run: |
          docker run -d \
            --name pgmq-rest \
            --network host \
            -e DB_HOST=localhost \
            -e DB_PORT=5432 \
            -e DB_USER=postgres \
            -e DB_PASSWORD=postgres \
            -e DB_NAME=postgres \
            -e DB_POOL_SIZE=20 \
            pgmq-rest

      - name: Wait for pgmq-rest to be ready
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:8080/ > /dev/null; then
              echo "pgmq-rest is ready"
              exit 0
            fi
            echo "Waiting for pgmq-rest to be ready..."
            sleep 1
          done
          echo "pgmq-rest failed to start"
          exit 1

      - name: Create docs directory
        run: mkdir -p docs

      - name: Fetch OpenAPI spec
        run: |
          curl -s http://localhost:8080/docs/json > docs/openapi.json
          echo "OpenAPI spec size: $(wc -c < docs/openapi.json) bytes"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install -g redoc-cli

      - name: Generate Documentation
        run: |
          # Generate HTML documentation
          redoc-cli bundle docs/openapi.json --output docs/api-docs.html
          # Convert HTML to markdown
          npx html-to-md docs/api-docs.html > docs/api-docs.md
          echo "Generated markdown size: $(wc -c < docs/api-docs.md) bytes"
          cat docs/api-docs.md

      - name: Clean up
        run: |
          rm docs/openapi.json docs/api-docs.html

      - name: Check for changes
        id: check_changes
        run: |
          if git diff --quiet docs/api-docs.md; then
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and Push Documentation
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add docs/api-docs.md
          git commit -m "Update API documentation"
          git push origin openapi-docs
